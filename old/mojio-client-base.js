// Generated by CoffeeScript 1.6.3
(function() {
  var MOJIO_BASE, http;

  http = require('http');

  module.exports = MOJIO_BASE = (function() {
    var defaults;

    defaults = {
      hostname: 'sandbox.api.moj.io/v1',
      port: '80',
      version: 'v1'
    };

    function MOJIO_BASE(options) {
      var _base, _base1, _base2;
      this.options = options;
      if (this.options == null) {
        this.options = {
          hostname: defaults.hostname,
          port: this.defaults.port,
          version: this.defaults.version
        };
      }
      if ((_base = this.options).hostname == null) {
        _base.hostname = defaults.hostname;
      }
      if ((_base1 = this.options).port == null) {
        _base1.port = defaults.port;
      }
      if ((_base2 = this.options).version == null) {
        _base2.version = defaults.version;
      }
      this.options.application = this.options.application;
      this.options.secret = this.options.secret;
    }

    MOJIO_BASE.prototype._makeParameters = function(params) {
      var property, query, value;
      if (params.length === 0) {
        '';
      }
      query = '?';
      for (property in params) {
        value = params[property];
        query += "" + property + "=" + value + "&";
      }
      return query.slice(0, -1);
    };

    MOJIO_BASE.prototype.Request = function(request, callback) {
      var action, parts;
      parts = {
        hostname: this.options.hostname,
        port: this.options.port,
        path: '/' + this.options.version,
        method: request.method
      };
      if ((request.resource != null)) {
        parts.path += '/' + request.resource;
      }
      if (request.id !== '') {
        parts.path += '/' + request.id;
      }
      if ((request.parameters != null) && Object.keys(request.parameters).length > 0) {
        parts.path += this._makeParameters(request.parameters);
      }
      if (this.token != null) {
        parts.headers = {
          MojioAPIToken: this.token
        };
      }
      if ((request.headers != null)) {
        parts.headers += request.headers;
      }
      if (request.body) {
        parts.body = request.body;
      }
      action = http.request(parts, function(result) {
        if (result.statusCode > 299) {
          return callback(result, null);
        } else if (result.statusCode !== 204) {
          result.setEncoding('utf8');
          return result.on('data', function(data) {
            if (data instanceof Object) {
              return callback(data, null);
            } else {
              return callback(null, JSON.parse(data));
            }
          });
        } else {
          return callback(null, result);
        }
      });
      action.on('error', function(error) {
        return callback(error, null);
      });
      return action.end();
    };

    return MOJIO_BASE;

  })();

}).call(this);

/*
//@ sourceMappingURL=mojio-client-base.map
*/
