// Generated by CoffeeScript 1.6.3
(function() {
    var Http, MojioClient;

    Http = require('./HttpNodeWrapper');

    module.exports = MojioClient = (function() {
        var App, Trip, defaults, mojio_models;

        defaults = {
            hostname: 'sandbox.api.moj.io',
            port: '80',
            version: 'v1'
        };

        function MojioClient(options) {
            var _base, _base1, _base2;
            this.options = options;
            if (this.options == null) {
                this.options = {
                    hostname: defaults.hostname,
                    port: this.defaults.port,
                    version: this.defaults.version
                };
            }
            if ((_base = this.options).hostname == null) {
                _base.hostname = defaults.hostname;
            }
            if ((_base1 = this.options).port == null) {
                _base1.port = defaults.port;
            }
            if ((_base2 = this.options).version == null) {
                _base2.version = defaults.version;
            }
            this.options.application = this.options.application;
            this.options.secret = this.options.secret;
        }

        /*
         Helpers
         */


        MojioClient.prototype._makeParameters = function(params) {
            var property, query, value;
            if (params.length === 0) {
                '';
            }
            query = '?';
            for (property in params) {
                value = params[property];
                query += "" + property + "=" + value + "&";
            }
            return query.slice(0, -1);
        };

        MojioClient.prototype.request = function(request, callback) {
            var http, parts;
            parts = {
                hostname: this.options.hostname,
                host: this.options.hostname,
                port: this.options.port,
                path: '/' + this.options.version,
                method: request.method,
                withCredentials: false
            };
            if ((request.resource != null)) {
                parts.path += '/' + request.resource;
            }
            if ((request.id != null) && request.id !== '') {
                parts.path += '/' + request.id;
            }
            if ((request.parameters != null) && Object.keys(request.parameters).length > 0) {
                parts.path += this._makeParameters(request.parameters);
            }
            parts.headers = {};
            if (this.token != null) {
                parts.headers["MojioAPIToken"] = this.token;
            }
            if ((request.headers != null)) {
                parts.headers += request.headers;
            }
            if (request.body) {
                parts.body = request.body;
            }
            http = new Http();
            return http.request(parts, callback);
        };

        /*
         Login
         */


        MojioClient.prototype.login_resource = 'Login';

        MojioClient.prototype._login = function(username, password, callback) {
            return this.request({
                method: 'POST',
                resource: this.login_resource,
                id: this.options.application,
                parameters: {
                    userOrEmail: username,
                    password: password,
                    secretKey: this.options.secret
                }
            }, callback);
        };

        MojioClient.prototype.login = function(username, password, callback) {
            var _this = this;
            return this._login(username, password, function(error, result) {
                if ((result != null)) {
                    _this.token = result._id;
                }
                return callback(error, result);
            });
        };

        MojioClient.prototype._logout = function(callback) {
            return this.request({
                method: 'DELETE',
                resource: this.login_resource,
                id: typeof mojio_token !== "undefined" && mojio_token !== null ? mojio_token : this.token
            }, callback);
        };

        MojioClient.prototype.logout = function(callback) {
            var _this = this;
            return this._logout(function(error, result) {
                _this.token = null;
                return callback(error, result);
            });
        };

        /*
         CRUD
         */


        MojioClient.prototype.get = function(request, callback) {
            return this.request(request, callback);
        };

        MojioClient.prototype.post = function(request, callback) {
            return this.request(request, callback);
        };

        MojioClient.prototype.put = function(request, callback) {
            return this.request(request, callback);
        };

        MojioClient.prototype["delete"] = function(request, callback) {
            return this.request(request, callback);
        };

        mojio_models = {};

        App = require('../src/models/App');

        mojio_models['App'] = App;

        MojioClient.prototype.make_model = function(type, json) {
            var object;
            if (json.Data instanceof Array) {
                object = new mojio_models[type](json.Data[0]);
            } else if ((json.Data != null)) {
                object = new mojio_models[type](json.Data);
            } else {
                object = new mojio_models[type](json);
            }
            return object;
        };

        /*
         App
         */


        MojioClient.prototype.postApp = function(app_model, callback) {
            return this.request({
                method: 'POST',
                resource: 'Apps',
                body: JSON.stringify(app_model)
            }, callback);
        };

        MojioClient.prototype.putApp = function(app_model, callback) {
            return this.request({
                method: 'PUT',
                resource: 'Apps',
                body: JSON.stringify(app_model)
            }, callback);
        };

        MojioClient.prototype.deleteApp = function(app_model, callback) {
            return this.request({
                method: 'PUT',
                resource: 'Apps',
                parameters: JSON.stringify({
                    id: app_model.id
                })
            }, callback);
        };

        MojioClient.prototype.getApps = function(parameters, callback) {
            var _this = this;
            return this.request({
                method: 'GET',
                resource: 'Apps',
                parameters: parameters
            }, function(error, result) {
                return callback(error, _this.make_model('App', result));
            });
        };

        MojioClient.prototype.getApp = function(id, callback) {
            var _this = this;
            return this.request({
                method: 'GET',
                resource: 'Apps',
                parameters: {
                    id: id
                }
            }, function(error, result) {
                return callback(error, _this.make_model('App', result));
            });
        };

        MojioClient.prototype.observeApp = function(id, callback) {
            return this.request({
                method: 'PUT',
                resource: 'Observer',
                parameters: {
                    Subject: 'App',
                    SubjectId: id
                }
            }, callback);
        };

        MojioClient.prototype.unobserveApp = function(id, callback) {
            return this.request({
                method: 'DELETE',
                resource: 'Observer',
                parameters: {
                    Subject: 'App',
                    SubjectId: id
                }
            }, callback);
        };

        MojioClient.prototype.apps = function(callback) {
            console.log("Deprication Warning: Use getApps instead");
            return this.getApps({}, callback);
        };

        /*
         Mojio
         */


        MojioClient.prototype.mojios_resource = 'Mojios';

        MojioClient.prototype._mojios = function(callback) {
            return this.request({
                method: 'GET',
                resource: this.mojios_resource
            }, callback);
        };

        MojioClient.prototype.mojios = function(callback) {
            var _this = this;
            return this._mojios(function(error, result) {
                return callback(error, result);
            });
        };

        /*
         Trip
         */


        MojioClient.prototype.trips_resource = 'Trips';

        Trip = require('../src/models/Trip');

        MojioClient.prototype._trips = function(callback) {
            return this.request({
                method: 'GET',
                resource: this.trips_resource
            }, callback);
        };

        MojioClient.prototype.trips = function(callback) {
            var _this = this;
            return this._trips(function(error, result) {
                var object;
                if (result.Data instanceof Array) {
                    object = new Trip(result.Data[0]);
                } else if ((result.Data != null)) {
                    object = new Trip(result.Data);
                } else {
                    object = new Trip(result);
                }
                return callback(error, object);
            });
        };

        /*
         User
         */


        MojioClient.prototype.users_resource = 'Users';

        MojioClient.prototype._users = function(callback) {
            return this.request({
                method: 'GET',
                resource: this.users_resource
            }, callback);
        };

        MojioClient.prototype.users = function(callback) {
            var _this = this;
            return this._users(function(error, result) {
                return callback(error, result);
            });
        };

        /*
         Vehicle
         */


        MojioClient.prototype.vehicles_resource = 'Vehicles';

        MojioClient.prototype._vehicles = function(callback) {
            return this.request({
                method: 'GET',
                resource: this.vehicles_resource
            }, callback);
        };

        MojioClient.prototype.vehicles = function(callback) {
            var _this = this;
            return this._vehicles(function(error, result) {
                return callback(error, result);
            });
        };

        /*
         Product
         */


        MojioClient.prototype.products_resource = 'Products';

        MojioClient.prototype._products = function(callback) {
            return this.request({
                method: 'GET',
                resource: this.products_resource
            }, callback);
        };

        MojioClient.prototype.products = function(callback) {
            var _this = this;
            return this._products(function(error, result) {
                return callback(error, result);
            });
        };

        /*
         Subscription
         */


        MojioClient.prototype.subscriptions_resource = 'Subscriptions';

        MojioClient.prototype._subscriptions = function(callback) {
            return this.request({
                method: 'GET',
                resource: this.subscriptions_resource
            }, callback);
        };

        MojioClient.prototype.subscriptions = function(callback) {
            var _this = this;
            return this._subscriptions(function(error, result) {
                return callback(error, result);
            });
        };

        /*
         Event
         */


        MojioClient.prototype.events_resource = 'Events';

        MojioClient.prototype._events = function(callback) {
            return this.request({
                method: 'GET',
                resource: this.events_resource
            }, callback);
        };

        MojioClient.prototype.events = function(callback) {
            var _this = this;
            return this._events(function(error, result) {
                return callback(error, result);
            });
        };

        /*
         Schema
         */


        MojioClient.prototype.schema_resource = 'Schema';

        MojioClient.prototype._schema = function(callback) {
            return this.request({
                method: 'GET',
                resource: this.schema_resource
            }, callback);
        };

        MojioClient.prototype.schema = function(callback) {
            var _this = this;
            return this._schema(function(error, result) {
                return callback(error, result);
            });
        };

        /*
         Observer
         */


        MojioClient.prototype.observer_resource = 'Observe';

        MojioClient.prototype._observer = function(callback) {
            return this.request({
                method: 'GET',
                resource: this.observer_resource
            }, callback);
        };

        MojioClient.prototype.observer = function(callback) {
            var _this = this;
            return this._observer(function(error, result) {
                return callback(error, result);
            });
        };

        return MojioClient;

    })();

}).call(this);

/*
 //@ sourceMappingURL=MojioClient.map
 */
